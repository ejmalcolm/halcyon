- need two task views: one for the ActionDock tasks that are not active yet, and one for the actual tasks

-make sure tasks aren't being duplicated when they're called by ui.cause_action, i think they might be

-make sure octant.class_objects_in() checks actually update everytime load_gamestate is called so that there aren't phantom action parameters

-on each player object, have a list of the tags they have available, etc.
    -generally the idea that stuff is unlocked by research
    -tech tree esque
    -stored under the player object

STARTED WORK ON:

- engineer create_building_plan, going to be very interesting because it needs a large amount of arguments that can be multiple selected
    - honestly its probably best to just special-case it
    - send it in a special tuple, detect what it is in halcyon_client, then create a dialog just for making a building plan
